<Window x:Class="VideoKioskWPF.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:VideoKioskWPF"
        mc:Ignorable="d"
        Title="MainWindow" Height="768" Width="1366"
        Name="mainWindow" ResizeMode="NoResize" 
        WindowState="Maximized" 
        WindowStartupLocation="CenterScreen" 
        WindowStyle="None" ShowInTaskbar="False">
    <Window.Resources>
        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="Button.Static.Background" Color="#FFDDDDDD"/>
        <SolidColorBrush x:Key="Button.Static.Border" Color="#FF707070"/>
        <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#FFBEE6FD"/>
        <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#FF3C7FB1"/>
        <SolidColorBrush x:Key="Button.Pressed.Background" Color="#FFC4E5F6"/>
        <SolidColorBrush x:Key="Button.Pressed.Border" Color="#FF2C628B"/>
        <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4"/>
        <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5"/>
        <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383"/>
        <Style x:Key="ButtonStyleCall" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{x:Null}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border">
                                    <Setter.Value>
                                        <ImageBrush TileMode="None" Stretch="Fill" ImageSource="{Binding ImageClickBG}"/>
                                    </Setter.Value>
                                </Setter>
                                <Setter Property="BorderBrush" TargetName="border" Value="{x:Null}"/>

                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" >
                                    <Setter.Value>
                                        <ImageBrush TileMode="None" Stretch="Fill" ImageSource="{Binding ImageClickBG}"/>
                                    </Setter.Value>
                                </Setter>
                                <Setter Property="BorderBrush" TargetName="border" Value="{x:Null}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" >
                                    <Setter.Value>
                                        <ImageBrush TileMode="None" Stretch="Fill" Opacity="50" ImageSource="{Binding ImageBG}"/>
                                    </Setter.Value>
                                </Setter>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>
    <Grid Name="mainGrid">
        <Grid.RowDefinitions>
            <RowDefinition Height="30"/>
            <RowDefinition Height="638"/>
            <RowDefinition Height="100"/>
        </Grid.RowDefinitions>
        <Label Grid.Row="0" Name="Header" Content="Kiosk Demo" HorizontalContentAlignment="Center"/>
        <WindowsFormsHost Grid.Row="1" Name="tcHost">
        </WindowsFormsHost>
        <Button Grid.Row="2" Name="btnCall" IsEnabled="False" Margin="0,10, 0, 10" Content="" HorizontalAlignment="Center" Click="BtnCall_Click" Style="{DynamicResource ButtonStyleCall}" BorderBrush="{x:Null}">
            <Button.Background>
                <ImageBrush ImageSource="{Binding ImageBG}" Stretch="Fill" TileMode="None"/>
            </Button.Background>
        </Button>
        <Popup x:Name="chatPopup" StaysOpen="False" Placement="Center" AllowsTransparency="True">
            <TextBlock Name="txtChat" TextWrapping="Wrap" TextAlignment="Center" Background="LightCyan" Opacity="0.8" FontSize="14">
                <TextBlock.Inlines>
                    <Run FontWeight="SemiBold" FontSize="16"
                         Text="{Binding MessageHeader}" />
                    <Run FontStyle="Normal" FontSize="14"
                         BaselineAlignment="Center"
                         Text="{Binding Message}" />
                </TextBlock.Inlines>
            </TextBlock>
        </Popup>
    </Grid>
</Window>
